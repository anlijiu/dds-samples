<?xml version="1.0"?>
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:noNamespaceSchemaLocation="/home/anlijiu/rti_connext_dds-6.1.0/resource/schema/rti_dds_qos_profiles.xsd"
     version="6.1.0">
    <qos_library name="NvWa">
        <!-- This profile is used to set up transport settings for the maximum
           size allowed for UDP.  This is required to get the maximum possible
           throughput.  -->
        <qos_profile name="MaxTransportThroughput" base_name="BuiltinQosLibExp::Generic.StrictReliable">
            <participant_qos>
                <receiver_pool>
                    <buffer_size>65507</buffer_size>
                </receiver_pool>
                <property>
                    <value>

                        <!--
                            Configure UDP transport for higher throughput:
                          -->
                        <element>
                            <name>dds.transport.UDPv4.builtin.parent.message_size_max</name>
                            <value>65507</value>
                        </element>

                        <!--
                          The next setting is to setup the buffers for sending and recieving data 
                          on the transport to be at least double what our expected message size will be.
                          In this case our expected message size is 1MB, so therefore we are setting
                          the buffer sizes to 2MB.
                          -->
                        <element>
                            <name>dds.transport.UDPv4.builtin.send_socket_buffer_size</name>
                            <value>2097152</value>
                        </element>
                        <element>
                            <name>dds.transport.UDPv4.builtin.recv_socket_buffer_size</name>
                            <value>2097152</value>
                        </element>
                        <!-- Configure shared memory transport for higher 
                             throughput: -->
                        <element>
                            <name>dds.transport.shmem.builtin.parent.message_size_max</name>
                            <value>65536</value>
                        </element>
                        <element>
                            <!-- Set the size of the shared memory transport's
                                 receive buffer to some large value.  -->
                            <name>dds.transport.shmem.builtin.receive_buffer_size</name>
                            <value>2097152</value>
                            <!-- 2 MB -->
                        </element>
                        <element>
                            <!--  Set the maximum number of messages that the 
                                  shared memory transport can cache while 
                                  waiting for them to be read and deserialized.
                             -->
                            <name>dds.transport.shmem.builtin.received_message_count_max</name>
                            <value>2048</value>
                        </element>
                        
                    </value>
                </property>
                
            </participant_qos>
        </qos_profile>

        <qos_profile name="OneToManyMulticast" base_name="MaxTransportThroughput" is_default_qos="true">
            <datareader_qos>
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>1</depth>
                </history>
            </datareader_qos>

            <datawriter_qos>
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>1</depth>
                </history>
            </datawriter_qos>
        </qos_profile>
    </qos_library>
</dds>
